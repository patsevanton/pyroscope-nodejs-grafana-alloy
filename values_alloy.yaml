alloy:
  securityContext:
    privileged: true  # Разрешает привилегированный доступ для Alloy
    runAsUser: 0      # Запуск от имени root-пользователя
    runAsGroup: 0     # Группа root
    fsGroup: 0        # Группа для файловой системы, также root

  configMap:
    create: true
    content: |
      logging {
        level = "debug"
        format = "logfmt"
      }
      
      discovery.kubernetes "local_pods" {
        selectors {
          field = "spec.nodeName=" + env("HOSTNAME")
          role = "pod"
        }
        role = "pod"
      }
      
      discovery.relabel "specific_pods" {
        targets = discovery.kubernetes.local_pods.targets
        rule {
          action = "drop"
          regex = "Succeeded|Failed|Completed"
          source_labels = ["__meta_kubernetes_pod_phase"]
        }
        
        rule {
          action = "replace"
          source_labels = ["__meta_kubernetes_namespace"]
          target_label = "namespace"
        }
        rule {
          action = "replace"
          source_labels = ["__meta_kubernetes_pod_name"]
          target_label = "pod"
        }
        rule {
          action = "replace"
          source_labels = ["__meta_kubernetes_pod_node_name"]
          target_label = "node"
        }
        
        rule {
          action = "replace"
          source_labels = ["__meta_kubernetes_pod_container_name"]
          target_label = "container"
        }
        
        // provide arbitrary service_name label, otherwise it will be set to {__meta_kubernetes_namespace}/{__meta_kubernetes_pod_container_name}
        rule {
          action = "replace"
          regex = "(.*)@(.*)"
          replacement = "${1}/${2}"
          separator = "@"
          source_labels = ["__meta_kubernetes_namespace", "__meta_kubernetes_pod_container_name"]
          target_label = "service_name"
        }
        
        // Filter specific targets to profile
        rule {
          source_labels = ["service_name"]
          regex = "(.*alloy|.*pyroscope|.*fast-slow)"
          action = "keep"
        }
      }
      
      pyroscope.ebpf "instance" {
        forward_to = [pyroscope.write.endpoint.receiver]
        targets = discovery.relabel.specific_pods.output
        python_enabled = true
      }
      pyroscope.write "endpoint" {
        endpoint {
          url = "http://pyroscope.pyroscope:4040"
        }
      }
  controller:
    hostPID: true
    privileged: true  # Разрешает доступ к PID namespace хоста
